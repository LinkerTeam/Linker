<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.linker.mapper.cardMapper">

	<!-- 카드 생성 -->
		<!-- 생성은 카드 제목(title)만 입력하는 것. 내용(content)에 대한 것은 '수정'으로 처리한다. -->
		<!-- 자동생성된 id값을 가져오기 위해 useGeneratedKeys를 true로 설정. -->
	<insert id="createCard" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO linker.card (title, u_id, cl_id)
		VALUES (#{title}, #{u_id}, #{cl_id})
	</insert>
	
	
	<!-- 카드 수정(제목, 내용 수정 -->
	<update id="updateCard">
		UPDATE linker.card
		<set>
			<if test="title != null">title = #{title}</if>
			<if test="content != null">content = #{content}</if>
		</set>
		WHERE id = #{id}	
	</update>
	
	
	<!-- 카드 수정(상태 변경) -->
	<update id="updateCardStatus">
		UPDATE linker.card c
		INNER JOIN linker.cardlist cl ON cl.id = c.cl_id
		<set>
			<if test="ps_id != 0">c.ps_id = #{ps_id}</if>
		</set>
		WHERE c.id = #{id}
	</update>
	
	
	<!-- 상태값에 따른 카드 조회 -->
	<select id="statusCardList" resultType="CardVO">
		SELECT
			c.id
			, c.u_id
			, c.title
			, c.content
			, c.cdate
			, c.udate
			, c.cl_id
			, c.ps_id
			, cl.p_id
		FROM linker.card c
		INNER JOIN linker.cardlist cl ON c.cl_id=cl.id
		WHERE p_id = #{p_id}
		AND c.ps_id = #{ps_id}
		ORDER BY udate DESC
	</select>
	
	
	<!-- 특정 카드리스트에 대한 진행상태의 카드 목록 -->
	<select id="listCards" resultType="CardVO">
		SELECT
			c.id
			, c.u_id
			, c.title
			, c.content
			, c.cdate
			, c.udate
			, c.cl_id
			, c.ps_id
			, cl.p_id
		FROM linker.card c
		INNER JOIN linker.cardlist cl ON c.cl_id=cl.id
		WHERE p_id = #{p_id}
		AND c.cl_id = #{cl_id}
		AND c.ps_id = 1
		ORDER BY udate DESC
	</select>
	
	
	<!-- 카드 상세내용 조회(카드모달창에 나오는 내용들) -->
	<select id="readPopcard" resultType="CardVO">
		SELECT
			c.id
			, c.u_id
			, c.title
			, c.content
			, c.cdate
			, c.udate
			, c.cl_id
			, c.ps_id
			, cl.p_id
			, cl.ps_id AS cl_ps_id
            , u.nickname
            , u.profile
		FROM linker.card c
		INNER JOIN linker.cardlist cl ON c.cl_id = cl.id
		INNER JOIN linker.user u ON c.u_id = u.id
		WHERE c.id = #{id}
	</select>
	
	
	<!-- 첨부파일 조회 -->
	<select id="allAttach" resultType="CardAttachVO">
		SELECT 
			f.id
			, f.file
			, f.c_id
			, c.ps_id
			, f.cdate
			, f.size
		FROM linker.c_file f
		LEFT JOIN linker.card c ON f.c_id = c.id
		WHERE c_id = #{c_id}
	</select>
	
	<!-- 첨부파일 업로드 -->
	<insert id="addAttach">
		INSERT INTO linker.c_file(file, c_id, size)
		VALUES (#{file}, #{c_id}, #{size})
	</insert>
	
	<!-- 첨부파일 삭제 -->
	<delete id="deleteAttach">
		DELETE FROM linker.c_file
		WHERE file = #{file}
	</delete>
	
</mapper>